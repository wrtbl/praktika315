from PIL import Image, ImageDraw, ImageTk

import random
import tkinter

def move_wrap(obj, move):
    canvas.move(obj, move[0], move[1])
    if canvas.coords(obj)[0]<0:
        canvas.move(obj, N_X*step, 0)
    if canvas.coords(obj)[0] >= N_X*step:
        canvas.move(obj, -N_X * step, 0)
    if canvas.coords(obj)[1] < 0:
        canvas.move(obj, 0, N_Y * step)
    if canvas.coords(obj)[1] >= N_X*step:
        canvas.move(obj, 0, -N_Y * step)

def do_nothing(x):
    pass

def check_move():
    if canvas.coords(player) == canvas.coords(exit):
        fin = canvas.create_image(canvas.coords(player), image=finpic, anchor='nw')
        label.config(text="Win!!")
        master.bind("<KeyPress>", do_nothing)
    for f in fires:
        if canvas.coords(player) == canvas.coords(f):
            label.config(text="You lose!")
            master.bind("<KeyPress>", do_nothing)
            kek = canvas.create_image(canvas.coords(player), image=kekpic, anchor='nw')
    for e in enemies:
        if canvas.coords(player) == canvas.coords(e[0]) or canvas.coords(player) == canvas.coords(e[1]):
            label.config(text="You lose!")
            master.bind("<KeyPress>", do_nothing)
    if canvas.coords(player) == canvas.coords(eat):
        canvas.delete(eat)
        for e in enemies:
                canvas.delete(e[0])


def key_pressed(event):
    if event.keysym == 'Up':
        move_wrap(player, (0, -step))
    check_move()
    if event.keysym == 'Down':
        move_wrap(player, (0, step))
    check_move()
    if event.keysym == 'Left':
        move_wrap(player, (-step, 0))
    check_move()
    if event.keysym == 'Right':
        move_wrap(player, (step, 0))
    check_move()
    for enemy in enemies:
        for e in enemies:
             direction = enemy[1]()
             move_wrap(enemy[0], direction)

def always_right():
    return (step, 0)

def random_move():
    return random.choice([(step, 0), (-step, 0), (0, step), (0, -step)])

def prepare_and_start():
    global player, exit, fires, enemies, enpic, eatpic, eat, enemy
    canvas.delete("all")
    exit_pos = (random.randint(0, N_X - 1) * step, random.randint(0, N_Y - 1) * step)
    eat_pos = (random.randint(0, N_X - 1) * step, random.randint(0, N_Y - 1) * step)
    player_pos = (random.randint(0, N_X - 1) * step, random.randint(0, N_Y - 1) * step)
    if (exit_pos == player_pos) or (exit_pos == eat_pos) or (player_pos == eat_pos):
        prepare_and_start()
    player = canvas.create_image((player_pos[0], player_pos[1]), image=ppic, anchor='nw')
    exit = canvas.create_image((exit_pos[0], exit_pos[1]), image=epic, anchor='nw')
    eat = canvas.create_image((eat_pos[0], eat_pos[1]), image=eatpic, anchor='nw')
    N_F = 6
    fires = []
    for i in range(N_F):
        f_pos = (random.randint(0, N_X-1)*step, random.randint(0, N_Y-1)*step)
        if (f_pos == player_pos) or (f_pos == exit_pos) or (f_pos == eat_pos):
            prepare_and_start()
        fire = canvas.create_image((f_pos[0], f_pos[1]), image=fpic, anchor='nw')
        fires.append(fire)
    N_E = 4
    enemies = []
    for j in range(N_E):
        en_pos = (random.randint(0, N_X-1)*step, random.randint(0, N_Y-1)*step)
        if (en_pos == player_pos) or (en_pos == exit_pos) or (en_pos == eat_pos):
            prepare_and_start()
        enemy = canvas.create_image((en_pos[0], en_pos[1]), image=enpic, anchor='nw')
        enemies.append((enemy, random.choice([always_right, random_move])))
    label.config(text='find the exit!')
    master.bind("<KeyPress>", key_pressed)

master = tkinter.Tk()
step = 60
N_X = 10
N_Y = 10
fpic = ImageTk.PhotoImage(Image.open("D:/f/fire.gif"))
eatpic = ImageTk.PhotoImage(Image.open("D:/f/eat.gif"))
ppic = ImageTk.PhotoImage(Image.open("D:/f/cat.gif"))
epic = ImageTk.PhotoImage(Image.open("D:/f/ks.gif"))
enpic = ImageTk.PhotoImage(Image.open("D:/f/pop.gif"))
finpic = ImageTk.PhotoImage(Image.open("D:/f/fin.gif"))
kekpic = ImageTk.PhotoImage(Image.open("D:/f/kek.gif"))
label = tkinter.Label(master, text="find the exit!")
label.pack()
canvas = tkinter.Canvas(master, bg='white', width=step * N_X, height=step * N_Y)
canvas.pack()
restart = tkinter.Button(master, text="restart", command=prepare_and_start)
restart.pack()
prepare_and_start()
master.mainloop()
